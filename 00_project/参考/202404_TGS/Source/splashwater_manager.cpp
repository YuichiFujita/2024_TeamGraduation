//=============================================================================
// 
//  水しぶきマネージャ処理 [splashwater_manager.cpp]
//  Author : 相馬靜雅
// 
//=============================================================================
#include "splashwater_manager.h"
#include "splashwater.h"
#include "splashwater_bg.h"
#include "manager.h"
#include "calculation.h"
#include "input.h"

//==========================================================================
// 定数定義
//==========================================================================
namespace
{
	const int MAX_SPLASH = 96;	// しぶきの最大数
}

//==========================================================================
// コンストラクタ
//==========================================================================
CSplashwater_Manager::CSplashwater_Manager(int nPriority) : CObject(nPriority)
{
	
}

//==========================================================================
// デストラクタ
//==========================================================================
CSplashwater_Manager::~CSplashwater_Manager()
{

}

//==========================================================================
// 生成処理
//==========================================================================
CSplashwater_Manager* CSplashwater_Manager::Create()
{
	// メモリの確保
	CSplashwater_Manager* pObj = DEBUG_NEW CSplashwater_Manager;

	if (pObj != nullptr)
	{
		// 初期化処理
		pObj->Init();
	}

	return pObj;
}

//==========================================================================
// 初期化処理
//==========================================================================
HRESULT CSplashwater_Manager::Init()
{
	// 種類の設定
	SetType(CObject::TYPE::TYPE_OBJECT2D);

	// しぶき生成
	for (int i = 0; i < 96; i++)
	{
		CSplashwater::Create();
	}

	// サウンド再生
	CSound::GetInstance()->PlaySound(CSound::LABEL::LABEL_SE_MIZUSIBUKI);

	// 背景
	CSplashwater_BG::Create();

	// 終了
	Uninit();
	return S_OK;
}

//==========================================================================
// 終了処理
//==========================================================================
void CSplashwater_Manager::Uninit()
{
	// 解放処理
	Release();
}

//==========================================================================
// 更新処理
//==========================================================================
void CSplashwater_Manager::Update()
{
	
}

//==========================================================================
// 描画処理
//==========================================================================
void CSplashwater_Manager::Draw()
{
	
}
