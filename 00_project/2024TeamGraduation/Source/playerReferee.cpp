//=============================================================================
// 
//  審判用プレイヤー処理 [playerReferee.cpp]
//  Author : 相馬靜雅
// 
//=============================================================================
#include "playerReferee.h"
#include "playerManager.h"
#include "camera.h"
#include "manager.h"
#include "input.h"
#include "calculation.h"
#include "sound.h"
#include "fade.h"

//==========================================================================
// 定数定義
//==========================================================================
namespace
{
	const std::string CHARAFILE = "data\\TEXT\\character\\player\\referee\\setup_player.txt";	// キャラクターファイル
}

//==========================================================================
// 関数ポインタ
//==========================================================================

//==========================================================================
// 静的メンバ変数
//==========================================================================

//==========================================================================
// コンストラクタ
//==========================================================================
CPlayerReferee::CPlayerReferee(const CGameManager::ETeamSide typeTeam, const CPlayer::EFieldArea typeArea, const CPlayer::EBaseType typeBase, int nPriority) :
	CPlayer(typeTeam, typeArea, typeBase, nPriority)
{

}

//==========================================================================
// デストラクタ
//==========================================================================
CPlayerReferee::~CPlayerReferee()
{

}

//==========================================================================
// 初期化処理
//==========================================================================
HRESULT CPlayerReferee::Init()
{
	// 種類の設定
	CObject::SetType(CObject::TYPE_PLAYER);

	// キャラ作成
	HRESULT hr = SetCharacter(CHARAFILE);
	if (FAILED(hr))
	{// 失敗していたら
		return E_FAIL;
	}

	return S_OK;
}

//==========================================================================
// 終了処理
//==========================================================================
void CPlayerReferee::Uninit()
{
	// 終了処理
	CPlayer::Uninit();
}

//==========================================================================
// 動的削除処理
//==========================================================================
void CPlayerReferee::Kill()
{
	// 動的削除処理
	CPlayer::Kill();
}

//==========================================================================
// 更新処理
//==========================================================================
void CPlayerReferee::Update(const float fDeltaTime, const float fDeltaRate, const float fSlowRate)
{
	// 過去の位置保存
	SetOldPosition(GetPosition());

	// 親の更新処理
	CObjectChara::Update(fDeltaTime, fDeltaRate, fSlowRate);
}

//==========================================================================
// 描画処理
//==========================================================================
void CPlayerReferee::Draw()
{
	// 描画処理
	CPlayer::Draw();
}
