//==========================================================================
// 
//	吹き出しの枠ヘッダー [balloonFrame.h]
//  Author : 相馬靜雅
// 
//==========================================================================

#ifndef _BALLOONFRAME_H_
#define _BALLOONFRAME_H_	// 二重インクルード防止

//==========================================================================
// インクルードファイル
//==========================================================================
#include "object2D.h"

//==========================================================================
// 前方宣言
//==========================================================================

//==========================================================================
// クラス定義
//==========================================================================
// 吹き出しの枠クラス
class CBalloonFrame : public CObject2D
{
public:

	//=============================
	// コンストラクタ/デストラクタ
	//=============================
	CBalloonFrame(int nPriority = mylib_const::PRIORITY_DEFAULT);
	~CBalloonFrame();

	//=============================
	// オーバーライド関数
	//=============================
	virtual HRESULT Init() override;
	virtual void Uninit() override;
	virtual void Update(const float fDeltaTime, const float fDeltaRate, const float fSlowRate) override;
	virtual void Kill() override;	// 削除
	void SetVtx() override;			// 頂点座標

	//=============================
	// メンバ関数
	//=============================

	//=============================
	// 静的メンバ関数
	//=============================
	static CBalloonFrame* Create(const MyLib::Vector2& size);	// 生成

private:

	//=============================
	// メンバ関数
	//=============================

	//=============================
	// メンバ変数
	//=============================
	MyLib::Vector2 m_TextSize;	// 文字サイズ
};

#endif
