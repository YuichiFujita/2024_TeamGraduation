//============================================================
//
//	ポイントライト処理 [lightPoint.cpp]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "lightPoint.h"

//************************************************************
//	親クラス [CLightPoint] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CLightPoint::CLightPoint()
{

}

//============================================================
//	デストラクタ
//============================================================
CLightPoint::~CLightPoint()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CLightPoint::Init()
{
	// ライトの初期化
	if (FAILED(CLight::Init()))
	{ // 初期化に失敗した場合

		assert(false);
		return E_FAIL;
	}

	// ポイントライトを設定
	SetLightType(D3DLIGHT_POINT);

	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CLightPoint::Uninit()
{
	// 親クラスの終了
	CLight::Uninit();
}

//============================================================
//	削除処理
//============================================================
void CLightPoint::Kill()
{
	// 親クラスの削除
	CLight::Kill();
}

//============================================================
//	更新処理
//============================================================
void CLightPoint::Update(const float fDeltaTime, const float fDeltaRate, const float fSlowRate)
{
	// ライトの更新
	CLight::Update(fDeltaTime, fDeltaRate, fSlowRate);
}

//============================================================
//	描画処理
//============================================================
void CLightPoint::Draw()
{
	// ライトの描画
	CLight::Draw();
}

//============================================================
//	生成処理
//============================================================
CLightPoint* CLightPoint::Create()
{
	// ポイントライトの生成
	CLightPoint* pLightPoint = DEBUG_NEW CLightPoint;
	if (pLightPoint == nullptr)
	{ // 生成に失敗した場合

		return nullptr;
	}
	else
	{ // 生成に成功した場合

		// ポイントライトの初期化
		if (FAILED(pLightPoint->Init()))
		{ // 初期化に失敗した場合

			// ポイントライトの破棄
			SAFE_DELETE(pLightPoint);
			return nullptr;
		}

		// 確保したアドレスを返す
		return pLightPoint;
	}
}
