//============================================================
//
//	スキップ操作ヘッダー [skip.h]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	二重インクルード防止
//************************************************************
#ifndef _SKIP_H_
#define _SKIP_H_

//************************************************************
//	インクルードファイル
//************************************************************
#include "object.h"

//************************************************************
//	前方宣言
//************************************************************
class CObject2D;	// オブジェクト2Dクラス

//************************************************************
//	クラス定義
//************************************************************
// スキップ操作クラス
class CSkip
{
public:
	// 状態列挙
	enum EState
	{
		STATE_NONE = 0,	// 何もしない
		STATE_FADEOUT,	// フェードアウト
		STATE_DISP,		// 表示
		STATE_FADEIN,	// フェードイン
		STATE_MAX		// この列挙型の総数
	};

	// コンストラクタ
	CSkip();

	// デストラクタ
	~CSkip();

	// メンバ関数
	HRESULT Init();	// 初期化
	void Uninit();	// 終了
	void Update(const float fDeltaTime, const float fDeltaRate, const float fSlowRate);	// 更新
	void Draw();	// 描画
	void SetDisp();	// 表示設定
	bool IsDisp();	// 表示取得

	// 静的メンバ関数
	static CSkip *Create();					// 生成
	static void Release(CSkip *&prSkip);	// 破棄

private:
	// メンバ変数
	CObject2D *m_pControl;	// 操作の情報
	EState m_state;			// 状態
	float m_fCurTime;		// 状態管理カウンター
};

#endif	// _SKIP_H_
