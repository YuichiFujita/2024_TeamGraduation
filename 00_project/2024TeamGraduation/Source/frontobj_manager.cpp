//=============================================================================
// 
//  手前側の配置物マネージャ [frontobj_manager.cpp]
//  Author : Ibuki Okusada
// 
//=============================================================================
#include "frontobj_manager.h"
#include "manager.h"
#include "calculation.h"

//==========================================================================
// 定数定義
//==========================================================================
namespace
{
	const std::string TEXT = "data\\TEXT\\baggage\\baggage_info.txt";	// 設置情報スクリプトファイル
	const std::string TEXT_LINE = "#------------------------------------------------------------------------------";	// テキストのライン
}
CFrontObjManager* CFrontObjManager::m_ThisPtr = nullptr;	// 自身のポインタ

//==========================================================================
// コンストラクタ
//==========================================================================
CFrontObjManager::CFrontObjManager()
{
	m_BaggageInfo.clear();	// 障害物情報
}

//==========================================================================
// デストラクタ
//==========================================================================
CFrontObjManager::~CFrontObjManager()
{

}

//==========================================================================
// 生成処理
//==========================================================================
CFrontObjManager* CFrontObjManager::Create()
{
	if (m_ThisPtr == nullptr)
	{
		// メモリの確保
		m_ThisPtr = DEBUG_NEW CFrontObjManager;

		if (m_ThisPtr != nullptr)
		{
			// 初期化処理
			m_ThisPtr->Init();
		}
	}

	return m_ThisPtr;
}

//==========================================================================
// 初期化処理
//==========================================================================
HRESULT CFrontObjManager::Init()
{
	// 読み込み
	return S_OK;
}

//==========================================================================
// 終了処理
//==========================================================================
void CFrontObjManager::Uninit()
{
	delete m_ThisPtr;
	m_ThisPtr = nullptr;
}

//==========================================================================
// 削除
//==========================================================================
void CFrontObjManager::Kill()
{
	delete m_ThisPtr;
	m_ThisPtr = nullptr;
}

//==========================================================================
// 割り当て
//==========================================================================
void CFrontObjManager::Regist(CObjectX* pObj)
{
	m_BaggageInfo.push_back(pObj);
}

//==========================================================================
// 更新処理
//==========================================================================
void CFrontObjManager::Update()
{

}
