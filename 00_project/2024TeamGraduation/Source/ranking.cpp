//=============================================================================
// 
//  ランキング処理 [ranking.cpp]
//  Author : 相馬靜雅
// 
//=============================================================================
#include "ranking.h"
#include "input.h"
#include "fade.h"
#include "renderer.h"
#include "calculation.h"
#include "debugproc.h"

//=============================================================================
// 定数定義
//=============================================================================
namespace
{
	
}

//==========================================================================
// 静的メンバ変数宣言
//==========================================================================

//==========================================================================
// コンストラクタ
//==========================================================================
CRanking::CRanking()
{
	
}

//==========================================================================
// デストラクタ
//==========================================================================
CRanking::~CRanking()
{

}

//==========================================================================
// 初期化処理
//==========================================================================
HRESULT CRanking::Init()
{

	// 初期化処理
	if (FAILED(CScene::Init()))
	{// 失敗した場合
		return E_FAIL;
	}

	// ファイル読み込み
	Load();

	// ソート
	Sort();

	// ファイル保存
	Save();

	// マップ生成
	CreateMap();

	CSound::GetInstance()->PlaySound(CSound::LABEL_BGM_RANKING);

	// 成功
	return S_OK;
}

//==========================================================================
// マップ生成
//==========================================================================
void CRanking::CreateMap()
{
	
}

//==========================================================================
// 終了処理
//==========================================================================
void CRanking::Uninit()
{
	// 終了処理
	CScene::Uninit();
}

//==========================================================================
// 更新処理
//==========================================================================
void CRanking::Update(const float fDeltaTime)
{
	if (CManager::GetInstance()->GetFade()->GetState() != CFade::STATE::STATE_NONE)
	{// フェード中は抜ける
		return;
	}
}

//==========================================================================
// 描画処理
//==========================================================================
void CRanking::Draw()
{

}

//==========================================================================
// ファイル読み込み
//==========================================================================
void CRanking::Load()
{
	
}

//==========================================================================
// 保存
//==========================================================================
void CRanking::Save()
{
	
}

//==========================================================================
// ソート
//==========================================================================
void CRanking::Sort()
{
	
}
