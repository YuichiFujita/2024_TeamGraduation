//==========================================================================
// 
//  カットイン用プレイヤー処理 [playerCutIn.cpp]
//  Author : 藤田勇一
// 
//==========================================================================
#include "playerCutIn.h"
#include "playerManager.h"

//==========================================================================
// 定数定義
//==========================================================================
namespace
{
	const std::string CHARAFILE = "data\\TEXT\\character\\referee\\setup_player.txt";	// キャラクターファイル
}

//==========================================================================
// 静的メンバ変数
//==========================================================================

//==========================================================================
// コンストラクタ
//==========================================================================
CPlayerCutIn::CPlayerCutIn(const CGameManager::ETeamSide typeTeam, const CPlayer::EFieldArea typeArea, const CPlayer::EBaseType typeBase, int nPriority) :
	CPlayer(typeTeam, typeArea, typeBase, nPriority)
{

}

//==========================================================================
// デストラクタ
//==========================================================================
CPlayerCutIn::~CPlayerCutIn()
{

}

//==========================================================================
// 初期化処理
//==========================================================================
HRESULT CPlayerCutIn::Init()
{
	// 親クラスの初期化
	HRESULT hr = CPlayer::Init();
	if (FAILED(hr)) { return E_FAIL; }

	// TODO：モーション変更
	// カットインモーションの設定
	GetMotion()->Set(EMotion::MOTION_WALK_SPAWN);

	// チームに応じて向きを設定
	const float fRotY = -HALF_PI * 0.25f;
	SetRotation(MyLib::Vector3(0.0f, fRotY + (HALF_PI * GetTeam()), 0.0f));
	return S_OK;
}

//==========================================================================
// 終了処理
//==========================================================================
void CPlayerCutIn::Uninit()
{
	// 終了処理
	CPlayer::Uninit();
}

//==========================================================================
// 削除処理
//==========================================================================
void CPlayerCutIn::Kill()
{
	// 削除処理
	CPlayer::Kill();
}

//==========================================================================
// 更新処理
//==========================================================================
void CPlayerCutIn::Update(const float fDeltaTime, const float fDeltaRate, const float fSlowRate)
{
	// 過去の位置保存
	SetOldPosition(GetPosition());

	// 親の更新処理
	CObjectChara::Update(fDeltaTime, fDeltaRate, fSlowRate);
}

//==========================================================================
// 描画処理
//==========================================================================
void CPlayerCutIn::Draw()
{
	// 描画処理
	CPlayer::Draw();
}
