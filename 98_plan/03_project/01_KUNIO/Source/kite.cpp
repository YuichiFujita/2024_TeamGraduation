//=============================================================================
// 
//  凧処理 [kite.cpp]
//  Author : Ibuki Okusada
// 
//=============================================================================
#include "kite.h"

// 名前空間
namespace
{
	const int NUM_DIVISION = (16);	// 分割数
	const float ROT_RANGE = (D3DX_PI * 0.75f);	// 範囲
	const float ROT_CORRECTION = ((1.0f / NUM_DIVISION) * ROT_RANGE * 2);	// 1分割辺りの移動量
}

//==========================================================================
// コンストラクタ
//==========================================================================
CKite::CKite(int nPriority) : CPeople(nPriority)
{
	m_StartRot = 0.0f;
}

//==========================================================================
// デストラクタ
//==========================================================================
CKite::~CKite()
{

}

//==========================================================================
// 初期化処理
//==========================================================================
HRESULT CKite::Init()
{
	// 初期化処理
	CPeople::Init();

	// 座標を上げる
	MyLib::Vector3 pos = GetPosition();
	pos.y += UtilFunc::Transformation::Random(70, 100) * 10.0f;
	SetPosition(pos);

	// 向きをランダムで決める
	int random = UtilFunc::Transformation::Random(-12, 12);
	float rot = static_cast<float>(random) * 0.1f;
	m_StartRot.y = rot;
	SetRotation(m_StartRot);

	return S_OK;
}

//==========================================================================
// 更新処理
//==========================================================================
void CKite::Update()
{
	// 親の処理
	CObjectChara::Update();
}
